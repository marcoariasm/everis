Angular 11
Typescript
Git GitHub
12 proyectos de Angular

Instalaciones necesarias:
    Google chrome
    Visual Studio Code
    Postman
    Mongo Compass
    Git + cuenta en github
    Node

Extensiones VS Code:
    angular snippets
    angular language service
    angular inline
    auto close tag
    typescript importer



start-process PowerShell -verb runas

5  Instalar Angular CLI
    npm i -g @angular/cli



PORQUÉ ANGULAR USA Typescript
- por la ayuda y un intellisense fuerte
- por el tipado estricto y errores en el momento de la escritura
- permite la inyección de dependencias (disponer de clases desde cualquier lugar de la aplicación)


MITOS
- Solucion a SEO Friendly:  hacer SSR con Angular Universal




ANGULAR
=======
- Marco de trabajo estandarizado
- vienen con todo lo que necesitas para trabajar
- es modular
- google le da mantenimiento hoy en día
- servicios en Angular son singleton bastante fuertes y centralizados


GIT RELEASE TAG
git tag -a v0.1.0 -m "fin seccion 4"
git push
git push --tag
(editar release en GitHub)
(ya se puede descargar la versión)



CREAR MÓDULO

 ng g m dbz

 ng g c dbz/mainPage --skipTests

 ng g c dbz/personajes --skipTests

 
[60]
pasar info del componente padre al hijo

[61]
Tarea con inputs y módulos
  1. nuevo componente     agregar           ng g c dbz/nuevo --skipTests
  2. <h3> Agregar ... hasta... </form>      
  3. Mover nuevo, agregar()
  4. @Input  personajes
  5. @Input  nuevo
  6. <app-agregar [nuevo]="nuevo">

[62]
outputs y eventemitter

[63]
depuraciones en chrome  F5  environment: Chrome,  generar un breakpoint

[64]
servicios en Angular hace que no se requiera de redux
son singletons muy poderosos

crear un servicio
  services/dbz.service.ts


[72]  Seccion 7
  - Modularización de la aplicación
  - estructura de la aplicación de media a gran escala 
  - componentes
  - viewchild
  - servicios
  - historial de búsquedas
  - uso de api keys
  - local y  sessionstorage
  - peticiones HTTP
  - animaciones mediante CSS

  APLICACION DE BANCO DE IMAGENES GIF

1 Crear  modulo shared
2 crear component  sidebar
3 exportar el sidebar en el módulo
4 importar el shared.modulo  dentro del app.module.ts
5 colocar el componente  <app-sidebar>


ng g c gifs/gifPage --skipTests -is


ng g s gifs/services/gif --skipTests
